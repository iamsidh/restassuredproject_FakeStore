<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="9" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-05-03T22:41:21 IST" name="Fake Store API Test Suite" finished-at="2025-05-03T22:41:32 IST" duration-ms="11339">
    <groups>
    </groups>
    <test started-at="2025-05-03T22:41:21 IST" name="ProductTests using POJO" finished-at="2025-05-03T22:41:32 IST" duration-ms="11339">
      <class name="testcases.ProductTests">
        <test-method is-config="true" signature="setup()[pri:0, instance:testcases.ProductTests@1349883]" started-at="2025-05-03T22:41:21 IST" name="setup" finished-at="2025-05-03T22:41:22 IST" duration-ms="513" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testGetAllProducts()[pri:0, instance:testcases.ProductTests@1349883]" started-at="2025-05-03T22:41:22 IST" name="testGetAllProducts" finished-at="2025-05-03T22:41:26 IST" duration-ms="3883" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAllProducts -->
        <test-method signature="testGetSingleProductById()[pri:1, instance:testcases.ProductTests@1349883]" started-at="2025-05-03T22:41:26 IST" name="testGetSingleProductById" finished-at="2025-05-03T22:41:26 IST" duration-ms="598" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSingleProductById -->
        <test-method signature="testGetLimitedProducts()[pri:2, instance:testcases.ProductTests@1349883]" started-at="2025-05-03T22:41:26 IST" name="testGetLimitedProducts" finished-at="2025-05-03T22:41:27 IST" duration-ms="580" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <201> but was <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <201> but was <200>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at testcases.ProductTests.testGetLimitedProducts(ProductTests.java:66)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLimitedProducts -->
        <test-method signature="testGetSortedProductsDesceding()[pri:3, instance:testcases.ProductTests@1349883]" started-at="2025-05-03T22:41:27 IST" name="testGetSortedProductsDesceding" finished-at="2025-05-03T22:41:28 IST" duration-ms="645" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSortedProductsDesceding -->
        <test-method signature="testGetSortedProductsAscending()[pri:4, instance:testcases.ProductTests@1349883]" started-at="2025-05-03T22:41:28 IST" name="testGetSortedProductsAscending" finished-at="2025-05-03T22:41:28 IST" duration-ms="590" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSortedProductsAscending -->
        <test-method signature="testGetAllCategories()[pri:5, instance:testcases.ProductTests@1349883]" started-at="2025-05-03T22:41:28 IST" name="testGetAllCategories" finished-at="2025-05-03T22:41:29 IST" duration-ms="546" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAllCategories -->
        <test-method signature="testProductsByCategory()[pri:6, instance:testcases.ProductTests@1349883]" started-at="2025-05-03T22:41:29 IST" name="testProductsByCategory" finished-at="2025-05-03T22:41:30 IST" duration-ms="725" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProductsByCategory -->
        <test-method signature="testAddNewProduct()[pri:7, instance:testcases.ProductTests@1349883]" started-at="2025-05-03T22:41:30 IST" name="testAddNewProduct" finished-at="2025-05-03T22:41:31 IST" duration-ms="1268" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNewProduct -->
        <test-method signature="testUpdateProduct()[pri:8, instance:testcases.ProductTests@1349883]" started-at="2025-05-03T22:41:31 IST" name="testUpdateProduct" finished-at="2025-05-03T22:41:31 IST" duration-ms="558" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateProduct -->
        <test-method signature="testDeleteProduct()[pri:9, instance:testcases.ProductTests@1349883]" started-at="2025-05-03T22:41:31 IST" name="testDeleteProduct" finished-at="2025-05-03T22:41:32 IST" duration-ms="613" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteProduct -->
      </class> <!-- testcases.ProductTests -->
    </test> <!-- ProductTests using POJO -->
  </suite> <!-- Fake Store API Test Suite -->
</testng-results>
